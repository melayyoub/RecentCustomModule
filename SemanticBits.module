<?php

/**
 * Implements hook_block_info().
 */
function SemanticBits_block_info()
{
    $blocks['test-custom-block'] = array(
        // info: The name of the block.
        'info' => t('SemanticBits Custom Block'),
        // Block caching options (per role, per user, etc.)
        // DRUPAL_CACHE_PER_ROLE is the default.
        'cache' => DRUPAL_CACHE_PER_ROLE,
        // extra configurations
        // "status" => true,
        // "region" => "content",
        // "pages" => "node/*",
    );

    return $blocks;
}
/**
 * Implements hook_block_view().
 */
function SemanticBits_block_view($delta = '')
{
    // This example is adapted from node.module.
    $block = array();

    switch ($delta) {
        case 'test-custom-block':
            $block['subject'] = t('Current Pages');
            if (user_access('access content')) {
                $result = renderRecentModifiedPages();
                // Array to contain items for the block to render.
                $items = array();
                if (count($result) > 0) {
                    // if the count is more than 1 then loop within the content
                    // and show the titles with links
                    foreach ($result as $node) {
                        $items[] = array(
                            'data' => l($node->title, 'node/'.$node->nid).'
                         Changed Date:'
                            .date('h:i - m/d/Y', $node->changed).
                            ' Created Date:'
                            .date('h:i - m/d/Y', $node->created),
                        );
                    }
                }

                // No content in the last week.
                if (empty($items)) {
                    $block['content'] = t('No pages available.');
                } else {
                    // Pass data through theme function.
                    $block['content'] = theme('item_list', array(
                        'items' => $items, ));
                }
            }
            break;
    }

    return $block;
}

function renderRecentModifiedPages()
{
    // today's date format is Y-m-d h:i:s
    $date = strtotime(date('Y-m-d 00:00:00', time()));
    // fetch all nodes from the type page, published and changed date minimum is today
    $nodes = db_select('node', 'n')
        ->fields('n')
        ->condition('status', 1)
        ->condition('changed', $date, '>')
        ->condition('type', 'page')
        ->execute()
        ->fetchAll();

    return $nodes;
}
